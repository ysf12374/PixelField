# Generated by Django 3.1.5 on 2021-01-25 15:45

import datetime
import django.contrib.gis.db.models.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=240, verbose_name='title')),
                ('slug', models.CharField(max_length=240, verbose_name='slug')),
                ('author_name', models.CharField(max_length=120)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('category_name', models.CharField(max_length=120, verbose_name='category name')),
                ('slug', models.CharField(max_length=120, verbose_name='slug')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.CharField(max_length=250, verbose_name='comment')),
                ('blog', models.ManyToManyField(to='blogs.Blog')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('tag_name', models.CharField(max_length=120, verbose_name='tag name')),
                ('slug', models.CharField(max_length=120, verbose_name='slug')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=50, verbose_name='email')),
                ('password', models.CharField(max_length=50, verbose_name='password')),
                ('name', models.CharField(max_length=50, verbose_name='name')),
                ('address', models.CharField(blank=True, max_length=50, null=True, verbose_name='address')),
                ('lon', models.FloatField()),
                ('lat', models.FloatField()),
                ('point', django.contrib.gis.db.models.fields.PointField(srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='Content',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=1440, verbose_name='content')),
                ('date_creation', models.DateTimeField(default=datetime.datetime.now, verbose_name='Date Creation')),
                ('comments_count', models.IntegerField(default=0)),
                ('is_user_comment_inside', models.BooleanField(default=False)),
                ('blog', models.ManyToManyField(to='blogs.Blog')),
                ('category', models.ManyToManyField(to='blogs.Category')),
                ('comment', models.ManyToManyField(to='blogs.Comment')),
                ('tag', models.ManyToManyField(to='blogs.Tag')),
                ('user', models.ManyToManyField(to='blogs.User')),
            ],
        ),
        migrations.AddField(
            model_name='comment',
            name='user',
            field=models.ManyToManyField(to='blogs.User'),
        ),
        migrations.AddField(
            model_name='blog',
            name='category_name',
            field=models.ManyToManyField(to='blogs.Category'),
        ),
        migrations.AddField(
            model_name='blog',
            name='tags_names',
            field=models.ManyToManyField(to='blogs.Tag'),
        ),
    ]
